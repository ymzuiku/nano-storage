var s=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames,n=Object.getOwnPropertySymbols;var c=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable;var l=(o,e,a)=>e in o?s(o,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):o[e]=a,f=(o,e)=>{for(var a in e||(e={}))c.call(e,a)&&l(o,a,e[a]);if(n)for(var a of n(e))g.call(e,a)&&l(o,a,e[a]);return o};var m=(o,e)=>{for(var a in e)s(o,a,{get:e[a],enumerable:!0})},N=(o,e,a,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of d(e))!c.call(o,t)&&t!==a&&s(o,t,{get:()=>e[t],enumerable:!(r=S(e,t))||r.enumerable});return o};var T=o=>N(s({},"__esModule",{value:!0}),o);var y={};m(y,{NanoStorage:()=>v});module.exports=T(y);var v=(o,e,a="localStorage")=>{if(typeof e!="object")throw"NanoDb: init need a object";let r={val:JSON.parse(JSON.stringify(e)),defaultValues:JSON.parse(JSON.stringify(e)),set:t=>{r.val=t,a!=="memory"&&window[a].setItem(o,JSON.stringify(r.val))},assign:t=>{Object.assign(r.val,t),a!=="memory"&&window[a].setItem(o,JSON.stringify(r.val))},clear:()=>{r.set(f({},r.defaultValues))}};if(a!=="memory"){let t=window[a].getItem(o);if(t)try{let i=JSON.parse(t);r.assign(i)}catch(i){console.error(i)}}return r};
