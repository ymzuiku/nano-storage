var n=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames,i=Object.getOwnPropertySymbols;var c=Object.prototype.hasOwnProperty,f=Object.prototype.propertyIsEnumerable;var l=(e,a,t)=>a in e?n(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,g=(e,a)=>{for(var t in a||(a={}))c.call(a,t)&&l(e,t,a[t]);if(i)for(var t of i(a))f.call(a,t)&&l(e,t,a[t]);return e};var N=(e,a)=>{for(var t in a)n(e,t,{get:a[t],enumerable:!0})},T=(e,a,t,o)=>{if(a&&typeof a=="object"||typeof a=="function")for(let s of d(a))!c.call(e,s)&&s!==t&&n(e,s,{get:()=>a[s],enumerable:!(o=S(a,s))||o.enumerable});return e};var v=e=>T(n({},"__esModule",{value:!0}),e);var O={};N(O,{NanoStorage:()=>b});module.exports=v(O);var b=(e,a,t="localStorage")=>{if(typeof a!="object")throw"NanoDb: init need a object";let o={val:JSON.parse(JSON.stringify(a)),defaultValues:JSON.parse(JSON.stringify(a)),set:r=>{o.val=r,window[t].setItem(e,JSON.stringify(o.val))},assign:r=>{Object.assign(o.val,r),window[t].setItem(e,JSON.stringify(o.val))},clear:()=>{o.set(g({},o.defaultValues))}},s=window[t].getItem(e);if(s)try{let r=JSON.parse(s);o.assign(r)}catch(r){console.error(r)}return o};
